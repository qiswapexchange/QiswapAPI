server {
        listen 80;
        listen [::]:80;

        location ~ /.well-known/acme-challenge {
          allow all;
	  root /var/www/certbot;
        }

        location / {
		return 301 https://$host$request_uri;
        }

	#return 301 https://testnet-graph.qiswap.com$request_uri;
    #https://www.digitalocean.com/community/tutorials/how-to-secure-a-containerized-node-js-application-with-nginx-let-s-encrypt-and-docker-compose

}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name testnet-graph.qiswap.com 

        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/testnet-graph.qiswap.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/testnet-graph.qiswap.com/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        location / {
		try_files $uri $uri/ =404;
        }

        location /rest-api/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://qiswap-rest-api:3001;
        }

        location /graphql-api/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://qiswap-graphql-api:3000;
        }

	root  /var/www/homepage/public;
        index index.html index.htm index.nginx-debian.html;
}
